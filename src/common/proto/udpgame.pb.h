// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/proto/udpgame.proto

#ifndef PROTOBUF_common_2fproto_2fudpgame_2eproto__INCLUDED
#define PROTOBUF_common_2fproto_2fudpgame_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_2fproto_2fudpgame_2eproto();
void protobuf_AssignDesc_common_2fproto_2fudpgame_2eproto();
void protobuf_ShutdownFile_common_2fproto_2fudpgame_2eproto();

class AMessage;
class WorldState;
class Object;
class ClientInput;

enum Type {
  WORLD_STATE = 1,
  CLIENT_INPUT = 2
};
bool Type_IsValid(int value);
const Type Type_MIN = WORLD_STATE;
const Type Type_MAX = CLIENT_INPUT;
const int Type_ARRAYSIZE = Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Type_descriptor();
inline const ::std::string& Type_Name(Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Type_descriptor(), value);
}
inline bool Type_Parse(
    const ::std::string& name, Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type>(
    Type_descriptor(), name, value);
}
// ===================================================================

class AMessage : public ::google::protobuf::Message {
 public:
  AMessage();
  virtual ~AMessage();
  
  AMessage(const AMessage& from);
  
  inline AMessage& operator=(const AMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AMessage& default_instance();
  
  void Swap(AMessage* other);
  
  // implements Message ----------------------------------------------
  
  AMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AMessage& from);
  void MergeFrom(const AMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline Type type() const;
  inline void set_type(Type value);
  
  // optional .WorldState world_state = 2;
  inline bool has_world_state() const;
  inline void clear_world_state();
  static const int kWorldStateFieldNumber = 2;
  inline const ::WorldState& world_state() const;
  inline ::WorldState* mutable_world_state();
  inline ::WorldState* release_world_state();
  
  // optional .ClientInput input = 3;
  inline bool has_input() const;
  inline void clear_input();
  static const int kInputFieldNumber = 3;
  inline const ::ClientInput& input() const;
  inline ::ClientInput* mutable_input();
  inline ::ClientInput* release_input();
  
  // @@protoc_insertion_point(class_scope:AMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_world_state();
  inline void clear_has_world_state();
  inline void set_has_input();
  inline void clear_has_input();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::WorldState* world_state_;
  ::ClientInput* input_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2fproto_2fudpgame_2eproto();
  friend void protobuf_AssignDesc_common_2fproto_2fudpgame_2eproto();
  friend void protobuf_ShutdownFile_common_2fproto_2fudpgame_2eproto();
  
  void InitAsDefaultInstance();
  static AMessage* default_instance_;
};
// -------------------------------------------------------------------

class WorldState : public ::google::protobuf::Message {
 public:
  WorldState();
  virtual ~WorldState();
  
  WorldState(const WorldState& from);
  
  inline WorldState& operator=(const WorldState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldState& default_instance();
  
  void Swap(WorldState* other);
  
  // implements Message ----------------------------------------------
  
  WorldState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldState& from);
  void MergeFrom(const WorldState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required fixed32 tick_number = 1;
  inline bool has_tick_number() const;
  inline void clear_tick_number();
  static const int kTickNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 tick_number() const;
  inline void set_tick_number(::google::protobuf::uint32 value);
  
  // required fixed32 owned_id = 2;
  inline bool has_owned_id() const;
  inline void clear_owned_id();
  static const int kOwnedIdFieldNumber = 2;
  inline ::google::protobuf::uint32 owned_id() const;
  inline void set_owned_id(::google::protobuf::uint32 value);
  
  // repeated .Object object = 3;
  inline int object_size() const;
  inline void clear_object();
  static const int kObjectFieldNumber = 3;
  inline const ::Object& object(int index) const;
  inline ::Object* mutable_object(int index);
  inline ::Object* add_object();
  inline const ::google::protobuf::RepeatedPtrField< ::Object >&
      object() const;
  inline ::google::protobuf::RepeatedPtrField< ::Object >*
      mutable_object();
  
  // required bytes grid = 4;
  inline bool has_grid() const;
  inline void clear_grid();
  static const int kGridFieldNumber = 4;
  inline const ::std::string& grid() const;
  inline void set_grid(const ::std::string& value);
  inline void set_grid(const char* value);
  inline void set_grid(const void* value, size_t size);
  inline ::std::string* mutable_grid();
  inline ::std::string* release_grid();
  
  // @@protoc_insertion_point(class_scope:WorldState)
 private:
  inline void set_has_tick_number();
  inline void clear_has_tick_number();
  inline void set_has_owned_id();
  inline void clear_has_owned_id();
  inline void set_has_grid();
  inline void clear_has_grid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 tick_number_;
  ::google::protobuf::uint32 owned_id_;
  ::google::protobuf::RepeatedPtrField< ::Object > object_;
  ::std::string* grid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2fproto_2fudpgame_2eproto();
  friend void protobuf_AssignDesc_common_2fproto_2fudpgame_2eproto();
  friend void protobuf_ShutdownFile_common_2fproto_2fudpgame_2eproto();
  
  void InitAsDefaultInstance();
  static WorldState* default_instance_;
};
// -------------------------------------------------------------------

class Object : public ::google::protobuf::Message {
 public:
  Object();
  virtual ~Object();
  
  Object(const Object& from);
  
  inline Object& operator=(const Object& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Object& default_instance();
  
  void Swap(Object* other);
  
  // implements Message ----------------------------------------------
  
  Object* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Object& from);
  void MergeFrom(const Object& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required fixed32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required float x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);
  
  // required float y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);
  
  // required float z = 4;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 4;
  inline float z() const;
  inline void set_z(float value);
  
  // @@protoc_insertion_point(class_scope:Object)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  float z_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2fproto_2fudpgame_2eproto();
  friend void protobuf_AssignDesc_common_2fproto_2fudpgame_2eproto();
  friend void protobuf_ShutdownFile_common_2fproto_2fudpgame_2eproto();
  
  void InitAsDefaultInstance();
  static Object* default_instance_;
};
// -------------------------------------------------------------------

class ClientInput : public ::google::protobuf::Message {
 public:
  ClientInput();
  virtual ~ClientInput();
  
  ClientInput(const ClientInput& from);
  
  inline ClientInput& operator=(const ClientInput& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientInput& default_instance();
  
  void Swap(ClientInput* other);
  
  // implements Message ----------------------------------------------
  
  ClientInput* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientInput& from);
  void MergeFrom(const ClientInput& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required fixed32 tick_number = 1;
  inline bool has_tick_number() const;
  inline void clear_tick_number();
  static const int kTickNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 tick_number() const;
  inline void set_tick_number(::google::protobuf::uint32 value);
  
  // required fixed32 actions = 2;
  inline bool has_actions() const;
  inline void clear_actions();
  static const int kActionsFieldNumber = 2;
  inline ::google::protobuf::uint32 actions() const;
  inline void set_actions(::google::protobuf::uint32 value);
  
  // required float horizontal_delta = 3;
  inline bool has_horizontal_delta() const;
  inline void clear_horizontal_delta();
  static const int kHorizontalDeltaFieldNumber = 3;
  inline float horizontal_delta() const;
  inline void set_horizontal_delta(float value);
  
  // required float verical_delta = 4;
  inline bool has_verical_delta() const;
  inline void clear_verical_delta();
  static const int kVericalDeltaFieldNumber = 4;
  inline float verical_delta() const;
  inline void set_verical_delta(float value);
  
  // @@protoc_insertion_point(class_scope:ClientInput)
 private:
  inline void set_has_tick_number();
  inline void clear_has_tick_number();
  inline void set_has_actions();
  inline void clear_has_actions();
  inline void set_has_horizontal_delta();
  inline void clear_has_horizontal_delta();
  inline void set_has_verical_delta();
  inline void clear_has_verical_delta();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 tick_number_;
  ::google::protobuf::uint32 actions_;
  float horizontal_delta_;
  float verical_delta_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2fproto_2fudpgame_2eproto();
  friend void protobuf_AssignDesc_common_2fproto_2fudpgame_2eproto();
  friend void protobuf_ShutdownFile_common_2fproto_2fudpgame_2eproto();
  
  void InitAsDefaultInstance();
  static ClientInput* default_instance_;
};
// ===================================================================


// ===================================================================

// AMessage

// required .Type type = 1;
inline bool AMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AMessage::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline Type AMessage::type() const {
  return static_cast< Type >(type_);
}
inline void AMessage::set_type(Type value) {
  GOOGLE_DCHECK(Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .WorldState world_state = 2;
inline bool AMessage::has_world_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AMessage::set_has_world_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AMessage::clear_has_world_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AMessage::clear_world_state() {
  if (world_state_ != NULL) world_state_->::WorldState::Clear();
  clear_has_world_state();
}
inline const ::WorldState& AMessage::world_state() const {
  return world_state_ != NULL ? *world_state_ : *default_instance_->world_state_;
}
inline ::WorldState* AMessage::mutable_world_state() {
  set_has_world_state();
  if (world_state_ == NULL) world_state_ = new ::WorldState;
  return world_state_;
}
inline ::WorldState* AMessage::release_world_state() {
  clear_has_world_state();
  ::WorldState* temp = world_state_;
  world_state_ = NULL;
  return temp;
}

// optional .ClientInput input = 3;
inline bool AMessage::has_input() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AMessage::set_has_input() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AMessage::clear_has_input() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AMessage::clear_input() {
  if (input_ != NULL) input_->::ClientInput::Clear();
  clear_has_input();
}
inline const ::ClientInput& AMessage::input() const {
  return input_ != NULL ? *input_ : *default_instance_->input_;
}
inline ::ClientInput* AMessage::mutable_input() {
  set_has_input();
  if (input_ == NULL) input_ = new ::ClientInput;
  return input_;
}
inline ::ClientInput* AMessage::release_input() {
  clear_has_input();
  ::ClientInput* temp = input_;
  input_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// WorldState

// required fixed32 tick_number = 1;
inline bool WorldState::has_tick_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldState::set_has_tick_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldState::clear_has_tick_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldState::clear_tick_number() {
  tick_number_ = 0u;
  clear_has_tick_number();
}
inline ::google::protobuf::uint32 WorldState::tick_number() const {
  return tick_number_;
}
inline void WorldState::set_tick_number(::google::protobuf::uint32 value) {
  set_has_tick_number();
  tick_number_ = value;
}

// required fixed32 owned_id = 2;
inline bool WorldState::has_owned_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldState::set_has_owned_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldState::clear_has_owned_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldState::clear_owned_id() {
  owned_id_ = 0u;
  clear_has_owned_id();
}
inline ::google::protobuf::uint32 WorldState::owned_id() const {
  return owned_id_;
}
inline void WorldState::set_owned_id(::google::protobuf::uint32 value) {
  set_has_owned_id();
  owned_id_ = value;
}

// repeated .Object object = 3;
inline int WorldState::object_size() const {
  return object_.size();
}
inline void WorldState::clear_object() {
  object_.Clear();
}
inline const ::Object& WorldState::object(int index) const {
  return object_.Get(index);
}
inline ::Object* WorldState::mutable_object(int index) {
  return object_.Mutable(index);
}
inline ::Object* WorldState::add_object() {
  return object_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Object >&
WorldState::object() const {
  return object_;
}
inline ::google::protobuf::RepeatedPtrField< ::Object >*
WorldState::mutable_object() {
  return &object_;
}

// required bytes grid = 4;
inline bool WorldState::has_grid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldState::set_has_grid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldState::clear_has_grid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldState::clear_grid() {
  if (grid_ != &::google::protobuf::internal::kEmptyString) {
    grid_->clear();
  }
  clear_has_grid();
}
inline const ::std::string& WorldState::grid() const {
  return *grid_;
}
inline void WorldState::set_grid(const ::std::string& value) {
  set_has_grid();
  if (grid_ == &::google::protobuf::internal::kEmptyString) {
    grid_ = new ::std::string;
  }
  grid_->assign(value);
}
inline void WorldState::set_grid(const char* value) {
  set_has_grid();
  if (grid_ == &::google::protobuf::internal::kEmptyString) {
    grid_ = new ::std::string;
  }
  grid_->assign(value);
}
inline void WorldState::set_grid(const void* value, size_t size) {
  set_has_grid();
  if (grid_ == &::google::protobuf::internal::kEmptyString) {
    grid_ = new ::std::string;
  }
  grid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WorldState::mutable_grid() {
  set_has_grid();
  if (grid_ == &::google::protobuf::internal::kEmptyString) {
    grid_ = new ::std::string;
  }
  return grid_;
}
inline ::std::string* WorldState::release_grid() {
  clear_has_grid();
  if (grid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = grid_;
    grid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Object

// required fixed32 id = 1;
inline bool Object::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Object::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Object::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Object::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Object::id() const {
  return id_;
}
inline void Object::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required float x = 2;
inline bool Object::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Object::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Object::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Object::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Object::x() const {
  return x_;
}
inline void Object::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 3;
inline bool Object::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Object::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Object::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Object::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Object::y() const {
  return y_;
}
inline void Object::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float z = 4;
inline bool Object::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Object::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Object::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Object::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Object::z() const {
  return z_;
}
inline void Object::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// ClientInput

// required fixed32 tick_number = 1;
inline bool ClientInput::has_tick_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientInput::set_has_tick_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientInput::clear_has_tick_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientInput::clear_tick_number() {
  tick_number_ = 0u;
  clear_has_tick_number();
}
inline ::google::protobuf::uint32 ClientInput::tick_number() const {
  return tick_number_;
}
inline void ClientInput::set_tick_number(::google::protobuf::uint32 value) {
  set_has_tick_number();
  tick_number_ = value;
}

// required fixed32 actions = 2;
inline bool ClientInput::has_actions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientInput::set_has_actions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientInput::clear_has_actions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientInput::clear_actions() {
  actions_ = 0u;
  clear_has_actions();
}
inline ::google::protobuf::uint32 ClientInput::actions() const {
  return actions_;
}
inline void ClientInput::set_actions(::google::protobuf::uint32 value) {
  set_has_actions();
  actions_ = value;
}

// required float horizontal_delta = 3;
inline bool ClientInput::has_horizontal_delta() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientInput::set_has_horizontal_delta() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientInput::clear_has_horizontal_delta() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientInput::clear_horizontal_delta() {
  horizontal_delta_ = 0;
  clear_has_horizontal_delta();
}
inline float ClientInput::horizontal_delta() const {
  return horizontal_delta_;
}
inline void ClientInput::set_horizontal_delta(float value) {
  set_has_horizontal_delta();
  horizontal_delta_ = value;
}

// required float verical_delta = 4;
inline bool ClientInput::has_verical_delta() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientInput::set_has_verical_delta() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientInput::clear_has_verical_delta() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientInput::clear_verical_delta() {
  verical_delta_ = 0;
  clear_has_verical_delta();
}
inline float ClientInput::verical_delta() const {
  return verical_delta_;
}
inline void ClientInput::set_verical_delta(float value) {
  set_has_verical_delta();
  verical_delta_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< Type>() {
  return Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2fproto_2fudpgame_2eproto__INCLUDED
