enum Type {
  CLIENT_INPUT = 1;
  INITIAL_STATE = 2;
  FRAME_INPUTS = 3;
}

enum Texture {
  TEXTURE_NONE = 0;
  TEXTURE_GRASS = 1;
  TEXTURE_SAND = 2;
  TEXTURE_ROCK = 3;
  TEXTURE_BW = 4;
  TEXTURE_FONT = 5;
  TEXTURE_FACE = 6;
  TEXTURE_HEAD = 7;
  TEXTURE_SIZE = 8;
}

enum ObjectType {
  GRASS = 1;
  SAND = 2;
  ROCK = 3;
  BW = 4;
  FONT = 5;
  PLAYER = 6;
}

message AMessage {
  required Type type = 1;
  optional ClientInput client_input = 2;
  optional InitialState initial_state = 3;
  optional FrameInputs frame_inputs = 4;
}

enum ClientMode {
  MODE_PLAYER = 0;
  MODE_OBSERVER = 1;
}

message ClientData {
  required sfixed32 client = 1;
  required ClientMode mode = 2;
  required fixed32 eid = 3;
  required fixed32 dead = 4;
}

message ObjectCount {
  required ObjectType type = 1;
  required fixed32 count = 2;
}

message Inventory {
  required fixed32 eid = 1;
  required ObjectType wielding = 2;
  repeated ObjectCount count = 3;
}

message FrameInputs {
  required fixed32 tick_number = 1;
  repeated FrameInput frame_inputs = 2;
}

message FrameInput {
  optional sfixed32 client = 1;
  optional fixed32 eid = 2;
  required fixed32 actions = 3;
  required float horizontal_delta = 4;
  required float vertical_delta = 5;
}

message ClientInput {
  required fixed32 tick_number = 1;
  required fixed32 previous_hash = 2;
  required FrameInput frame_input = 3;
}

message InitialState {
  required fixed32 tick_number = 1;
  required fixed32 next_eid = 2;
  required fixed32 client_id = 3;
  required bytes grid = 4;
  repeated Inventory inventories = 5;
  repeated ClientData client_data = 6;
  repeated PhysicsData physics_data = 7;
}

message PhysicsData {
  required fixed32 eid = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
  required float horizontal_angle = 5;
  required float vertical_angle = 6;
  required float dim_x = 7;
  required float dim_y = 8;
  required float dim_z = 9;
  required ObjectType type = 10;
}
